[gd_scene load_steps=55 format=3 uid="uid://bx2kvly7q7pye"]

[ext_resource type="Texture2D" uid="uid://dnq11berfwhs8" path="res://enemies/Shadow/attack/attack_1.png" id="1_3ckus"]
[ext_resource type="Texture2D" uid="uid://d3j2rqi5qggk2" path="res://enemies/Shadow/attack/attack_2.png" id="2_2woak"]
[ext_resource type="Texture2D" uid="uid://bxtdmippxxyax" path="res://enemies/Shadow/attack/attack_3.png" id="3_q2jjy"]
[ext_resource type="Texture2D" uid="uid://cnbkd53eh88jl" path="res://enemies/Shadow/attack/attack_4.png" id="4_ao5j5"]
[ext_resource type="Texture2D" uid="uid://baab5v8craxcu" path="res://enemies/Shadow/attack/attack_5.png" id="5_71e1m"]
[ext_resource type="Texture2D" uid="uid://bq824xtp5ubwy" path="res://enemies/Shadow/attack/attack_6.png" id="6_y8n2u"]
[ext_resource type="Texture2D" uid="uid://cynhxoejtvvxl" path="res://enemies/Shadow/attack/attack_7.png" id="7_g7sl4"]
[ext_resource type="Texture2D" uid="uid://phyvrlrguik6" path="res://enemies/Shadow/attack/attack_8.png" id="8_tnx7u"]
[ext_resource type="Texture2D" uid="uid://c5oglh1r63h6p" path="res://enemies/Shadow/attack/attack_9.png" id="9_m5xij"]
[ext_resource type="Texture2D" uid="uid://ljxxubtlgi3h" path="res://enemies/Shadow/attack/attack_10.png" id="10_wgcrp"]
[ext_resource type="Texture2D" uid="uid://dwa2cp486fiiu" path="res://enemies/Shadow/attack/attack_11.png" id="11_m7wlc"]
[ext_resource type="Texture2D" uid="uid://xioe8l3b1rf2" path="res://enemies/Shadow/attack2/attack_1.png" id="12_wv0pg"]
[ext_resource type="Texture2D" uid="uid://13eqj3rvukes" path="res://enemies/Shadow/attack2/attack_2.png" id="13_cvlak"]
[ext_resource type="Texture2D" uid="uid://jyitpw61xgjq" path="res://enemies/Shadow/attack2/attack_3.png" id="14_c4ay1"]
[ext_resource type="Texture2D" uid="uid://cibq454ilmf4t" path="res://enemies/Shadow/attack2/attack_4.png" id="15_v18x4"]
[ext_resource type="Texture2D" uid="uid://by2r6nwuesi5v" path="res://enemies/Shadow/attack2/attack_5.png" id="16_mp4ew"]
[ext_resource type="Texture2D" uid="uid://y4gl7an4ouiy" path="res://enemies/Shadow/attack2/attack_6.png" id="17_hvk4f"]
[ext_resource type="Texture2D" uid="uid://poufk2kyfb27" path="res://enemies/Shadow/attack2/attack_7.png" id="18_hnbcm"]
[ext_resource type="Texture2D" uid="uid://b8jvwko0kirh5" path="res://enemies/Shadow/attack2/attack_8.png" id="19_6g123"]
[ext_resource type="Texture2D" uid="uid://cble30g0k3ct2" path="res://enemies/Shadow/dealth/Dealth_1.png" id="20_lypbv"]
[ext_resource type="Texture2D" uid="uid://kaoaay1hpxvi" path="res://enemies/Shadow/dealth/Dealth_2.png" id="21_8qpm5"]
[ext_resource type="Texture2D" uid="uid://bbbveebboto0d" path="res://enemies/Shadow/dealth/Dealth_3.png" id="22_1at40"]
[ext_resource type="Texture2D" uid="uid://cxjhj540fk8q2" path="res://enemies/Shadow/dealth/Dealth_4.png" id="23_06ypo"]
[ext_resource type="Texture2D" uid="uid://4d5scvlp8s1d" path="res://enemies/Shadow/dealth/Dealth_5.png" id="24_y2of2"]
[ext_resource type="Texture2D" uid="uid://drhkm5vawlwg5" path="res://enemies/Shadow/dealth/Dealth_6.png" id="25_bsjia"]
[ext_resource type="Texture2D" uid="uid://bbekgtmb6wquy" path="res://enemies/Shadow/dealth/Dealth_7.png" id="26_rdvw6"]
[ext_resource type="Texture2D" uid="uid://b0vma01hyarxj" path="res://enemies/Shadow/dealth/Dealth_8.png" id="27_xvfd2"]
[ext_resource type="Texture2D" uid="uid://b0vemj1bm6a12" path="res://enemies/Shadow/dealth/Dealth_9.png" id="28_oe576"]
[ext_resource type="Texture2D" uid="uid://c75agdyiedq5g" path="res://enemies/Shadow/dealth/Dealth_10.png" id="29_3n4sm"]
[ext_resource type="Texture2D" uid="uid://bcjhdjasew8o4" path="res://enemies/Shadow/idle/idle_1.png" id="30_rophn"]
[ext_resource type="Texture2D" uid="uid://cifl13y4df2wh" path="res://enemies/Shadow/idle/idle_2.png" id="31_02dri"]
[ext_resource type="Texture2D" uid="uid://campp0bw7enxw" path="res://enemies/Shadow/idle/idle_3.png" id="32_n6d10"]
[ext_resource type="Texture2D" uid="uid://bvy8nk8tadn0n" path="res://enemies/Shadow/idle/idle_4.png" id="33_v4c2t"]
[ext_resource type="Texture2D" uid="uid://cdx1yenaqbbsd" path="res://enemies/Shadow/idle/idle_5.png" id="34_q55it"]
[ext_resource type="Texture2D" uid="uid://b3kuyex0dww3" path="res://enemies/Shadow/idle/idle_6.png" id="35_2eovr"]
[ext_resource type="Texture2D" uid="uid://bw8j4bst41j0x" path="res://enemies/Shadow/jump/jump_1.png" id="36_0m124"]
[ext_resource type="Texture2D" uid="uid://drr2bo4ds45hs" path="res://enemies/Shadow/jump/jump_2.png" id="37_ntb5v"]
[ext_resource type="Texture2D" uid="uid://bdr7wbpkdrpcm" path="res://enemies/Shadow/jump/jump_3.png" id="38_f8h6l"]
[ext_resource type="Texture2D" uid="uid://g4q7a3uk4nkt" path="res://enemies/Shadow/jump/jump_4.png" id="39_d6g1o"]
[ext_resource type="Texture2D" uid="uid://ftlr735vydfd" path="res://enemies/Shadow/run/run_1.png" id="40_4rq07"]
[ext_resource type="Texture2D" uid="uid://bcmvt2lo3pkkb" path="res://enemies/Shadow/run/run_2.png" id="41_p1ol4"]
[ext_resource type="Texture2D" uid="uid://bfmkfyh83dxvf" path="res://enemies/Shadow/run/run_3.png" id="42_mbswl"]
[ext_resource type="Texture2D" uid="uid://w6pejl5w27se" path="res://enemies/Shadow/run/run_4.png" id="43_xwe73"]
[ext_resource type="AudioStream" uid="uid://c8k4pdjmo2mi" path="res://Sound Effects/shadow/Spider_Death.ogg" id="44_3ckus"]
[ext_resource type="AudioStream" uid="uid://bp0sxntdwageo" path="res://Sound Effects/shadow/attack.mp3" id="45_2woak"]
[ext_resource type="AudioStream" uid="uid://b8ys41c7ogbfx" path="res://Sound Effects/Ghost_Death.ogg" id="46_2woak"]
[ext_resource type="AudioStream" uid="uid://jlg8tucldckf" path="res://Sound Effects/teleport.wav" id="46_q2jjy"]

[sub_resource type="GDScript" id="GDScript_4g3ns"]
script/source = "extends CharacterBody2D

@export var max_health: int = 100
@export var knockback_force: float = 2000.0
@export var friction: float = 0.8
@export var move_speed: float = 300.0
@export var attack_range: float = 120.0
@export var detection_range: float = 400.0
@export var attack_cooldown: float = 0.25
@export var gravity: float = 2000.0
@export var knockback_duration: float = 0.25
@export var vertical_knockback_factor: float = 0.3
@export var separation_distance: float = 80.0
@export var separation_strength: float = 350.0
@export var teleport_offsets: Array[Vector2] = []
@export var pit_respawn_offset: Vector2 = Vector2(0, -250)
@export var fixed_respawn_point_path: NodePath 

const HEALTH_THRESHOLD = 0.4
var is_in_desperation_mode: bool = false
var is_on_teleport_cooldown: bool = false

var health: int
enum State { IDLE, CHASE, ATTACK, HURT, DEAD }
var current_state: State = State.IDLE
var base_move_speed: float
var speed_variation_timer: float = 0.0
var random_offset: float = 0.0
var target: Node2D = null
var has_target: bool = false
var knockback: Vector2 = Vector2.ZERO
var can_attack: bool = true
var random_direction_offset: Vector2
var use_primary_attack: bool = true
var last_safe_on_floor_position: Vector2
var is_teleporting_from_pit: bool = false
var pit_fall_counter: int = 0 
var fixed_respawn_point: Marker2D


@onready var animated_sprite = $AnimatedSprite2D
@onready var collision_shape = $CollisionShape2D
@onready var hand_pivot = $HandPivot
@onready var attack_area: Area2D = $HandPivot/SwordArea
@onready var detection_area = $DetectionArea
@onready var proximity_detector = $ProximityDetector
@onready var teleport_timer = $TeleportTimer
@onready var teleport_cooldown = $TeleportCooldown
@onready var pit_detector = $PitDetector
@onready var pit_teleport_timer = $PitTeleportTimer
@onready var pit_counter_reset_timer = $PitCounterResetTimer #
@onready var audio_nodes = {
	\"hit\": $Audio/hit,
	\"attack\": $Audio/attack,
	\"death\": $Audio/death,
	\"teleport\": $Audio/teleport
}

func _ready() -> void:
	set_collision_mask_value(3, false)
	health = max_health
	add_to_group(\"enemies\")
	setup_detection_area()
	
	attack_area.monitoring = false
	attack_area.body_entered.connect(_on_attack_area_body_entered)
	
	proximity_detector.body_entered.connect(_on_proximity_detector_body_entered)
	teleport_timer.timeout.connect(_on_teleport_timer_timeout)
	teleport_cooldown.timeout.connect(_on_teleport_cooldown_timeout)
	pit_detector.area_entered.connect(_on_pit_detector_area_entered)
	pit_teleport_timer.timeout.connect(teleport_to_safe_spot)
	pit_counter_reset_timer.timeout.connect(_on_pit_counter_reset_timer_timeout)
	
	current_state = State.IDLE
	animated_sprite.play(\"idle\")
	
	random_offset = randf_range(0.0, TAU)
	base_move_speed = move_speed + randf_range(-30.0, 30.0)
	random_direction_offset = Vector2(randf_range(-0.5, 0.5), 0).normalized()
	last_safe_on_floor_position = global_position


func setup_detection_area() -> void:
	var shape = CircleShape2D.new()
	shape.radius = detection_range
	detection_area.get_node(\"CollisionShape2D\").shape = shape
	detection_area.body_entered.connect(_on_detection_area_body_entered)

func _physics_process(delta: float) -> void:
	if current_state == State.DEAD:
		return
	
	
	speed_variation_timer += delta
	var sin_factor = sin(speed_variation_timer * 2.0 + random_offset) * 0.2 + 1.0
	move_speed = base_move_speed * sin_factor + 400
	
	if not is_on_floor():
		velocity.y += gravity * delta
	else:
		velocity.y = 0
		last_safe_on_floor_position = global_position

	if current_state == State.ATTACK:
		move_and_slide()
		return

	if knockback != Vector2.ZERO:
		handle_knockback(delta)
	elif has_target and is_instance_valid(target):
		handle_combat()
	else:
		current_state = State.IDLE
		velocity.x = 0

	handle_animations()
	move_and_slide()


func handle_animations() -> void:
	match current_state:
		State.DEAD: animated_sprite.play(\"death\")
		State.HURT: animated_sprite.play(\"hurt\")
		State.ATTACK: pass
		State.CHASE:
			if not is_on_floor(): animated_sprite.play(\"jump\")
			elif abs(velocity.x) > 0: animated_sprite.play(\"run\")
			else: animated_sprite.play(\"idle\")
		State.IDLE:
			if not is_on_floor(): animated_sprite.play(\"jump\")
			elif abs(velocity.x) > 0: animated_sprite.play(\"run\")
			else: animated_sprite.play(\"idle\")


func handle_knockback(delta: float) -> void:
	velocity = knockback
	velocity.y += gravity * delta
	knockback *= friction
	if knockback.length() < 50 or is_on_wall():
		knockback = Vector2.ZERO
		if health > 0:
			current_state = State.CHASE if has_target else State.IDLE


func apply_separation_force() -> Vector2:
	var separation_force = Vector2.ZERO
	var enemies = get_tree().get_nodes_in_group(\"enemies\")
	for other in enemies:
		if other == self or not other is CharacterBody2D or other.knockback != Vector2.ZERO or other.current_state == State.HURT:
			continue
		var distance = global_position.distance_to(other.global_position)
		if distance < separation_distance and distance > 0:
			var push_dir = (global_position - other.global_position).normalized()
			var strength = (separation_distance - distance) / separation_distance
			separation_force += push_dir * strength
	return separation_force.normalized() * separation_strength


func handle_combat() -> void:
	var direction = (target.global_position - global_position).normalized()
	direction += random_direction_offset * 0.4
	direction = direction.normalized()
	var distance = global_position.distance_to(target.global_position)
	animated_sprite.flip_h = direction.x < 0
	update_attack_area_position()
	if distance <= attack_range and can_attack:
		start_attack()
	else:
		current_state = State.CHASE
		var separation = apply_separation_force()
		var final_direction = (direction + separation).normalized()
		velocity.x = final_direction.x * move_speed


func take_damage(amount: int, attack_origin: Vector2) -> void:
	if current_state == State.DEAD: return
	var knockback_dir = (global_position - attack_origin).normalized()
	knockback_dir.y *= vertical_knockback_factor
	knockback = knockback_dir * knockback_force
	health -= amount
	current_state = State.HURT
	GameEffects.request_hit_stop(0.4, animated_sprite, global_position)
	audio_nodes[\"hit\"].play()
	if not is_in_desperation_mode and (float(health) / float(max_health) <= HEALTH_THRESHOLD):
		is_in_desperation_mode = true
	var knockback_timer = get_tree().create_timer(knockback_duration)
	await knockback_timer.timeout
	knockback = Vector2.ZERO
	if health <= 0: await die()
	else: current_state = State.CHASE if has_target else State.IDLE


func start_attack() -> void:
	if !can_attack: return
	can_attack = false
	current_state = State.ATTACK
	if use_primary_attack: animated_sprite.play(\"attack\")
	else: animated_sprite.play(\"attack_2\")
	use_primary_attack = not use_primary_attack
	await get_tree().create_timer(0.15).timeout
	audio_nodes[\"attack\"].play()
	update_attack_area_position()
	attack_area.monitoring = true
	await animated_sprite.animation_finished
	attack_area.monitoring = false
	current_state = State.CHASE if has_target else State.IDLE
	await get_tree().create_timer(attack_cooldown).timeout
	can_attack = true


func update_attack_area_position() -> void:
	var offset = Vector2(attack_range * 0.8, 0)
	attack_area.position = offset if not animated_sprite.flip_h else -offset


func die() -> void:
	audio_nodes[\"death\"].play()
	collision_shape.set_deferred(\"disabled\", true)
	current_state = State.DEAD
	animated_sprite.play(\"death\")
	await animated_sprite.animation_finished
	await get_tree().create_timer(2).timeout
	queue_free()


func _on_detection_area_body_entered(body: Node2D) -> void:
	if body.is_in_group(\"player\"):
		target = body
		has_target = true
		current_state = State.CHASE


func _on_attack_area_body_entered(body: Node2D) -> void:
	if body.is_in_group(\"player\") and current_state == State.ATTACK:
		body.take_damage(10, global_position)


func _on_proximity_detector_body_entered(body: Node2D) -> void:
	if body.is_in_group(\"player\"):
		if is_in_desperation_mode and not is_on_teleport_cooldown:
			trigger_teleport_sequence()

func trigger_teleport_sequence() -> void:
	if teleport_offsets.size() < 2:
		return
	if not is_instance_valid(target):
		return

	is_on_teleport_cooldown = true
	velocity = Vector2.ZERO
	
	var destination = target.global_position + teleport_offsets[0]
	global_position = destination
	
	teleport_timer.start()

func _on_teleport_timer_timeout() -> void:
	audio_nodes['teleport'].play()
	if is_instance_valid(target):
		var destination = target.global_position + teleport_offsets[1]
		global_position = destination
	
	teleport_cooldown.start()

	if has_target and is_instance_valid(target):
		current_state = State.CHASE
	else:
		current_state = State.IDLE

func _on_teleport_cooldown_timeout() -> void:
	is_on_teleport_cooldown = false

func teleport_to_safe_spot() -> void:
	animated_sprite.visible = true
	collision_shape.set_deferred(\"disabled\", false)
	
	if pit_fall_counter >= 2:
		if fixed_respawn_point:
			audio_nodes['teleport'].play()
			global_position = fixed_respawn_point.global_position
		else:
			global_position = last_safe_on_floor_position
		
		current_state = State.IDLE
		pit_fall_counter = 0 
	else:
		if has_target and is_instance_valid(target):
			audio_nodes['teleport'].play()
			global_position = target.global_position + pit_respawn_offset
			current_state = State.CHASE
		else:
			audio_nodes['teleport'].play()
			global_position = last_safe_on_floor_position
			current_state = State.IDLE
		if !is_instance_valid(fixed_respawn_point) && last_safe_on_floor_position.distance_to(global_position) > 1000:
			global_position = Vector2(500, 500)
			audio_nodes['teleport'].play()
		pit_counter_reset_timer.start()

	velocity = Vector2.ZERO
	knockback = Vector2.ZERO
	is_teleporting_from_pit = false

func _on_pit_detector_area_entered(area: Area2D) -> void:
	# Verifica se a área é a correta E se já não estamos no meio de um teleporte
	if area.is_in_group(\"fall_pit\") and not is_teleporting_from_pit:
		is_teleporting_from_pit = true # Ativa a trava para não executar de novo
		
		pit_counter_reset_timer.stop()
		pit_fall_counter += 1
		
		velocity = Vector2.ZERO
		current_state = State.IDLE
		animated_sprite.visible = false
		collision_shape.set_deferred(\"disabled\", true)
		
		pit_teleport_timer.start()

func _on_pit_counter_reset_timer_timeout() -> void:
	pit_fall_counter = 0
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_opd48"]
size = Vector2(101, 106.156)

[sub_resource type="SpriteFrames" id="SpriteFrames_iv7se"]
animations = [{
"frames": [{
"duration": 3.0,
"texture": ExtResource("1_3ckus")
}, {
"duration": 3.0,
"texture": ExtResource("2_2woak")
}, {
"duration": 3.0,
"texture": ExtResource("3_q2jjy")
}, {
"duration": 3.0,
"texture": ExtResource("4_ao5j5")
}, {
"duration": 3.0,
"texture": ExtResource("5_71e1m")
}, {
"duration": 3.0,
"texture": ExtResource("6_y8n2u")
}, {
"duration": 3.0,
"texture": ExtResource("7_g7sl4")
}, {
"duration": 3.0,
"texture": ExtResource("8_tnx7u")
}, {
"duration": 3.0,
"texture": ExtResource("9_m5xij")
}, {
"duration": 3.0,
"texture": ExtResource("10_wgcrp")
}, {
"duration": 3.0,
"texture": ExtResource("11_m7wlc")
}],
"loop": false,
"name": &"attack",
"speed": 22.0
}, {
"frames": [{
"duration": 3.0,
"texture": ExtResource("12_wv0pg")
}, {
"duration": 3.0,
"texture": ExtResource("13_cvlak")
}, {
"duration": 3.0,
"texture": ExtResource("14_c4ay1")
}, {
"duration": 3.0,
"texture": ExtResource("15_v18x4")
}, {
"duration": 3.0,
"texture": ExtResource("16_mp4ew")
}, {
"duration": 3.0,
"texture": ExtResource("17_hvk4f")
}, {
"duration": 3.0,
"texture": ExtResource("18_hnbcm")
}, {
"duration": 3.0,
"texture": ExtResource("19_6g123")
}],
"loop": false,
"name": &"attack_2",
"speed": 22.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("20_lypbv")
}, {
"duration": 1.0,
"texture": ExtResource("21_8qpm5")
}, {
"duration": 1.0,
"texture": ExtResource("22_1at40")
}, {
"duration": 1.0,
"texture": ExtResource("23_06ypo")
}, {
"duration": 1.0,
"texture": ExtResource("24_y2of2")
}, {
"duration": 1.0,
"texture": ExtResource("25_bsjia")
}, {
"duration": 1.0,
"texture": ExtResource("26_rdvw6")
}, {
"duration": 1.0,
"texture": ExtResource("27_xvfd2")
}, {
"duration": 1.0,
"texture": ExtResource("28_oe576")
}, {
"duration": 1.0,
"texture": ExtResource("29_3n4sm")
}],
"loop": false,
"name": &"death",
"speed": 30.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("30_rophn")
}, {
"duration": 1.0,
"texture": ExtResource("31_02dri")
}, {
"duration": 1.0,
"texture": ExtResource("32_n6d10")
}, {
"duration": 1.0,
"texture": ExtResource("33_v4c2t")
}, {
"duration": 1.0,
"texture": ExtResource("34_q55it")
}, {
"duration": 1.0,
"texture": ExtResource("35_2eovr")
}],
"loop": false,
"name": &"idle",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("36_0m124")
}, {
"duration": 1.0,
"texture": ExtResource("37_ntb5v")
}, {
"duration": 1.0,
"texture": ExtResource("38_f8h6l")
}, {
"duration": 1.0,
"texture": ExtResource("39_d6g1o")
}],
"loop": true,
"name": &"jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("40_4rq07")
}, {
"duration": 1.0,
"texture": ExtResource("41_p1ol4")
}, {
"duration": 1.0,
"texture": ExtResource("42_mbswl")
}, {
"duration": 1.0,
"texture": ExtResource("43_xwe73")
}],
"loop": false,
"name": &"run",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_e5e7g"]
size = Vector2(328.704, 136)

[sub_resource type="CircleShape2D" id="CircleShape2D_e5e7g"]
radius = 302.134

[sub_resource type="CircleShape2D" id="CircleShape2D_3ckus"]
radius = 281.349

[sub_resource type="CircleShape2D" id="CircleShape2D_2woak"]
radius = 89.2861

[node name="Shadow" type="CharacterBody2D"]
collision_layer = 4
collision_mask = 2
script = SubResource("GDScript_4g3ns")
teleport_offsets = Array[Vector2]([Vector2(400, 0), Vector2(500, 0)])
pit_respawn_offset = Vector2(-100, -250)

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(-14.5, -14.0781)
shape = SubResource("RectangleShape2D_opd48")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(-12, -12.7342)
scale = Vector2(4.60364, 4.66329)
sprite_frames = SubResource("SpriteFrames_iv7se")
animation = &"attack"
frame = 10
frame_progress = 1.0

[node name="Audio" type="Node2D" parent="."]
position = Vector2(-11, -9)

[node name="hit" type="AudioStreamPlayer2D" parent="Audio"]
position = Vector2(-9, -8)
stream = ExtResource("44_3ckus")
volume_db = 16.083

[node name="attack" type="AudioStreamPlayer2D" parent="Audio"]
stream = ExtResource("45_2woak")
volume_db = 1.485

[node name="death" type="AudioStreamPlayer2D" parent="Audio"]
stream = ExtResource("46_2woak")
volume_db = 16.495

[node name="teleport" type="AudioStreamPlayer2D" parent="Audio"]
stream = ExtResource("46_q2jjy")
volume_db = 16.495

[node name="HandPivot" type="Node2D" parent="."]
position = Vector2(0, -20)
scale = Vector2(1.08, 1)

[node name="SwordArea" type="Area2D" parent="HandPivot"]
position = Vector2(6.48132, -3)
collision_layer = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="HandPivot/SwordArea"]
position = Vector2(76.389, 9)
shape = SubResource("RectangleShape2D_e5e7g")

[node name="DetectionArea" type="Area2D" parent="."]
position = Vector2(-11, -10)

[node name="CollisionShape2D" type="CollisionShape2D" parent="DetectionArea"]
position = Vector2(-13, -1)
shape = SubResource("CircleShape2D_e5e7g")
metadata/_edit_lock_ = true

[node name="ProximityDetector" type="Area2D" parent="."]
position = Vector2(-6, -5)

[node name="CollisionShape2D" type="CollisionShape2D" parent="ProximityDetector"]
position = Vector2(4, 6)
shape = SubResource("CircleShape2D_3ckus")

[node name="TeleportTimer" type="Timer" parent="."]
wait_time = 2.0
one_shot = true

[node name="TeleportCooldown" type="Timer" parent="."]
wait_time = 5.0
one_shot = true

[node name="PitDetector" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="PitDetector"]
shape = SubResource("CircleShape2D_2woak")

[node name="PitTeleportTimer" type="Timer" parent="."]
wait_time = 0.5
one_shot = true

[node name="PitCounterResetTimer" type="Timer" parent="."]
wait_time = 0.5
one_shot = true

[connection signal="area_entered" from="PitDetector" to="." method="_on_pit_detector_area_entered"]
